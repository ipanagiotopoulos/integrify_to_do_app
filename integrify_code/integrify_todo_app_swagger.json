{
  "openapi": "3.0.1",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:5002",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/signup": {
      "post": {
        "description": "This endpoint is used  for signing up purposes",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type":"string",
                  "example": "ioannis"
                },
                "email": {
                  "type":"string",
                  "example": "ioannis@gmail.com"
                },
                "password": {
                  "type":"string",
                  "example": "****"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "404": {
            "description": "Not Found"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/signin": {
      "post": {
        "description": "This endpoint is used  for signing in purposes",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "type":"string",
                  "example": "ioannis"
                },
                "password": {
                  "type":"string",
                  "example": "****"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/changepassword": {
      "put": {
        "description": "This endpoint is used to change the user's credentials",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "password": {
                  "type":"string",
                  "example": "******"
                },
                "newPassword1": {
                  "type":"string",
                  "example": "******"
                },
                "newPassword2": {
                  "type":"string",
                  "example": "******"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/todos": {
      "get": {
        "description": "This endpoint is used to get all the to do items that belong to the user.The user is verified by the Authorization token which a jwt token containing the user's id in its payload.",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "status",
            "in": "query",
            "type": "string",
            "enum": ["NotStarted", "OnGoing", "Completed"]
          }
        ],
        "responses": {
          "202": {
            "description": "Accepted"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "This endpoint is used to add new items the inventory of the user.The user is verified by the Authorization token which a jwt token containing the user's id in its payload",
        "parameters": [
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "item1",
                  "type":"string"
                },
                "description": {
                  "type":"string",
                  "example": "Item's description"
                },
                "status": {
                  "type":"string",
                  "example": "Completed",
                  "enum": ["NotStarted", "OnGoing", "Completed"]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          },
          "501": {
            "description": "Not Implemented"
          }
        }
      }
    },
    "/todos/{id}": {
      "put": {
        "description": "This endpoint is used to update the details of a to do item which was created by the same user.The user is verified by the Authorization token which a jwt token containing the user's id in its payload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "Bearer token string",
            "required": true
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type":"string",
                  "example": "item1"
                },
                "description": {
                  "type":"string",
                  "example": "Item's new description."
                },
                "status": {
                  "type":"string",
                  "example": "NotStarted",
                  "enum": ["NotStarted", "OnGoing", "Completed"]
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "description": "This endpoint is used to delete an item which was created by the user.The user is verified by the Authorization token which a jwt token containing the user's id in its payload",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "number"
          },
          {
            "name": "authorization",
            "in": "header",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}